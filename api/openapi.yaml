openapi: 3.0.3
info:
  title: Instill API
  version: '0.1'
  contact:
    email: support@instill.tech
    name: Contact
  description: >-

    ![Alpha](https://img.shields.io/badge/Status-Alpha-blue)


    # Overview


    The Instill API is currently in alpha development. We welcome any
    constructive feedback, so feel free to contact us at support@instill.tech.


    <SecurityDefinitions />
servers:
  - url: 'https://api.instill.tech'
externalDocs:
  description: Learn more from our documentation
  url: 'https://docs.instill.tech'
tags:
  - description: >
      Image classification consists in categorising images according to a set of
      _pre-defined_ categories

      (also called classes).


      Categories can represent anything. They can be a set of items, e.g.

      ```

      computer, table, cat, person

      ```

      in which case the AI will try to find the category that best describes the
      image. The AI will

      generate a score between 0 and 1 for each category. The category with the
      highest score is

      the one that most likely accurately describes the image.


      Categories can also represent something more abstract. For example,
      whether there is a defect

      in a manufactured part or not:

      ```

      defect, no_defect

      ```


      > Note: Classification does not localise objects in an image, even if the
      categories

      represent a set of items. If the goal is to localise objects, use object
      detection.
    name: Classification
  - description: >
      Object detection consists in localising objects in an image and
      categorising them according to a set

      of _pre-defined_ categories (also called classes). Objects are localised
      with a bounding box.

      Each bounding box is represented by

      - four coordinates: `left`, `top`, `width` and `height` (see below
      figure).

      - a `score` between 0 and 1. The higher the score, the higher the quality
      of the detection result.

      - a `category` describing the type of the object.


      <br />

      <p align="center" margin-top=200px>
        <img src="https://artifacts.instill.tech/docs/api/inference/imgs/detection.svg">
      </p>
    name: Detection
  - description: >
      Instill uses the [OAuth 2.0 protocal](https://tools.ietf.org/html/rfc6749)
      for authentication and authorization. To access most of the Instill API
      endpoints, you need to authenticate with an access token that in the
      format of [JSON Web Tokens (JWTs)](https://tools.ietf.org/html/rfc7519)
      with a valid duration and limited API scopes.


      To access Instill API via the Client Credentials grant, create your first
      [client](/#tag/Client) in the Instill Console and follow the basic steps:

      1. Obtain and encode the client credentials (Client ID `client_id` and
      Client Secret `client_secret`) of your client to Base64 format. For
      example:

      ```

      export CREDENTIALS=$(echo -n '<client_id>:<client_secret>' | base64)

      ```

      2. Request an access token from the [token
      endpoint](https://api.instill.tech/oauth2/token) `/oauth2/token` using the
      base64-encoded client credentials.

      ```

      curl -X POST \
          -H "Content-Length: 0" \
          -H "Content-Type: application/json" \
          -H "Authorization: Basic $CREDENTIALS" \
          https://api.instill.tech/oauth2/token?audience=https://api.instill.tech&grant_type=client_credentials
      ```

      3. Send the access token in a HTTP Authorization request header using the
      [Bearer authentication
      scheme](https://tools.ietf.org/html/draft-ietf-oauth-v2-bearer-20#section-2.1).
    name: Token
  - description: >
      A client is an application that makes protected requests with its
      authorization to get access to Instill APIs. A client's credentisals
      include Client ID `client_id` and Client secret `client_secret`.


      Create your first client in the Instill Console and use a client to
      programmatically access the Instill API via the Client Credentials grant.
      Please refer to the [Token](/#tag/Token) section on how to access Instill
      API.
    name: Client
  - description: |
      Health status of the service
    name: Health
  - description: Everything about your models
    externalDocs:
      description: Learn more from our documentation
      url: 'https://docs.instill.tech'
    name: Model
  - description: Everything about Instill Pipeline
    name: Pipeline
paths:
  /health/inference:
    get:
      description: Get inference API health status
      operationId: getHealth
      responses:
        '200':
          content:
            application/json:
              examples:
                health:
                  $ref: '#/components/examples/Health'
              schema:
                $ref: '#/components/schemas/Health'
          description: Ok
        '503':
          content:
            application/problem+json:
              example:
                status: 503
                title: Service Unavailable
                detail: Inference API is not ready
                duration: 0.01
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: Get inference API health status
      tags:
        - Health
      x-code-samples:
        - lang: cURL
          source: |
            curl -X GET https://api.instill.tech/health/inference
  '/inference/models/{id}/versions/{version}/outputs':
    post:
      description: Deep learning inference by a specific model
      operationId: postInferenceByModel
      parameters:
        - description: ID of the model
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
        - description: Version of the model
          explode: false
          in: path
          name: version
          required: true
          schema:
            type: number
          style: simple
      requestBody:
        $ref: '#/components/requestBodies/ImageInputs'
      responses:
        '200':
          content:
            application/json:
              examples:
                classificationOutputs:
                  $ref: '#/components/examples/classificationOutputs'
                detectionOutputs:
                  $ref: '#/components/examples/detectionOutputs'
          description: Success
        '400':
          content:
            application/problem+json:
              example:
                status: 400
                title: Bad Request
                detail: The detail will vary depending on the cause.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Infer images by a specific model
      tags:
        - Inference
      x-codeSamples:
        - lang: cURL (application/json)
          source: |
            curl -X POST \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer eyJhbGci...bJJPUc2w' \
              -d '{
                "contents": [
                  {
                    "url": " https://artifacts.instill.tech/dog.jpg"
                  },
                  {
                    "base64": "/9j/4AAQ...Kkdf/9k="
                  }
                ]
              }' \
              https://api.instill.tech/inference/models/{model-id}/versions/{version}/outputs
        - lang: cURL (multipart/form-data)
          source: |
            curl -X POST \
            -H 'Content-Type: multipart/form-data' \
            -H 'Authorization: Bearer eyJhbGci...bJJPUc2w' \
            -F "contents=@img1.jpg" -F "contents=@img2.png" ... \
            https://api.instill.tech/tasks/detection/outputs
  /tasks/classification/outputs:
    post:
      deprecated: true
      description: Classify images according to pre-defined categories
      operationId: postClassification
      requestBody:
        $ref: '#/components/requestBodies/ImageInputs'
      responses:
        '200':
          content:
            application/json:
              examples:
                classificationOutputs:
                  $ref: '#/components/examples/classificationOutputs'
              schema:
                $ref: '#/components/schemas/ClassificationOutputs'
          description: Success
        '400':
          content:
            application/problem+json:
              example:
                status: 400
                title: Bad Request
                detail: The detail will vary depending on the cause.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Classify images
      tags:
        - Classification
      x-codeSamples:
        - lang: cURL (application/json)
          source: |
            curl -X POST \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer eyJhbGci...bJJPUc2w' \
              -d '{
                "contents": [
                  {
                    "url": " https://artifacts.instill.tech/dog.jpg"
                  },
                  {
                    "base64": "/9j/4AAQ...Kkdf/9k="
                  }
                ]
              }' \
              https://api.instill.tech/tasks/classification/outputs
        - lang: cURL (multipart/form-data)
          source: |
            curl -X POST \
            -H 'Content-Type: multipart/form-data' \
            -H 'Authorization: Bearer eyJhbGci...bJJPUc2w' \
            -F "contents=@img1.jpg" -F "contents=@img2.png" ... \
            https://api.instill.tech/tasks/classification/outputs
  /tasks/detection/outputs:
    post:
      deprecated: true
      description: >-
        Localise objects in an image using bounding boxes and identify them
        according to pre-defined categories
      operationId: postDetection
      requestBody:
        $ref: '#/components/requestBodies/ImageInputs'
      responses:
        '200':
          content:
            application/json:
              examples:
                detectionOutputs:
                  $ref: '#/components/examples/detectionOutputs'
              schema:
                $ref: '#/components/schemas/DetectionOutputs'
          description: Success
        '400':
          content:
            application/problem+json:
              example:
                status: 400
                title: Bad Request
                detail: The detail will vary depending on the cause.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Detect objects
      tags:
        - Detection
      x-codeSamples:
        - lang: cURL (application/json)
          source: |
            curl -X POST \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer eyJhbGci...bJJPUc2w' \
              -d '{
                "contents": [
                  {
                    "url": " https://artifacts.instill.tech/dog.jpg"
                  },
                  {
                    "base64": "/9j/4AAQ...Kkdf/9k="
                  }
                ]
              }' \
              https://api.instill.tech/tasks/detection/outputs
        - lang: cURL (multipart/form-data)
          source: |
            curl -X POST \
            -H 'Content-Type: multipart/form-data' \
            -H 'Authorization: Bearer eyJhbGci...bJJPUc2w' \
            -F "contents=@img1.jpg" -F "contents=@img2.png" ... \
            https://api.instill.tech/tasks/detection/outputs
  '/tasks/detection/models/{id}/versions/{version}/outputs':
    post:
      deprecated: true
      description: >-
        Localise objects in an image using bounding boxes and identify them
        according to pre-defined categories using a specific model
      operationId: postDetectionByModel
      parameters:
        - description: ID of the model
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
        - description: Version of the model
          explode: false
          in: path
          name: version
          required: true
          schema:
            type: number
          style: simple
      requestBody:
        $ref: '#/components/requestBodies/ImageInputs'
      responses:
        '200':
          content:
            application/json:
              examples:
                detectionOutputs:
                  $ref: '#/components/examples/detectionOutputs'
              schema:
                $ref: '#/components/schemas/DetectionOutputs'
          description: Success
        '400':
          content:
            application/problem+json:
              example:
                status: 400
                title: Bad Request
                detail: The detail will vary depending on the cause.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Detect objects by a specific model
      tags:
        - Detection
      x-codeSamples:
        - lang: cURL (application/json)
          source: |
            curl -X POST \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer eyJhbGci...bJJPUc2w' \
              -d '{
                "contents": [
                  {
                    "url": " https://artifacts.instill.tech/dog.jpg"
                  },
                  {
                    "base64": "/9j/4AAQ...Kkdf/9k="
                  }
                ]
              }' \
              https://api.instill.tech/tasks/detection/models/{id}/versions/{version}/outputs
        - lang: cURL (multipart/form-data)
          source: |
            curl -X POST \
            -H 'Content-Type: multipart/form-data' \
            -H 'Authorization: Bearer eyJhbGci...bJJPUc2w' \
            -F "contents=@img1.jpg" -F "contents=@img2.png" ... \
            https://api.instill.tech/tasks/detection/outputs
  /health/management:
    get:
      description: Get Management API health status
      operationId: getManagementHealth
      responses:
        '200':
          content:
            application/json:
              examples:
                health:
                  $ref: '#/components/examples/health'
              schema:
                $ref: '#/components/schemas/managementHealth'
          description: Ok
        '503':
          content:
            application/problem+json:
              example:
                status: 503
                title: Service Unavailable Error
                detail: Management API is not ready
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: Get Management API health status
      tags:
        - Health
      x-code-samples:
        - lang: cURL
          source: |
            curl -X GET https://api.instill.tech/health/management
  /oauth2/token:
    post:
      description: >-
        Get an access token by using the client's Credentials via Basic
        Authorization.
      operationId: postOAuth2JWT
      parameters:
        - description: >-
            The unique identifier of the resource server (API) you want to
            access
          explode: true
          in: query
          name: audience
          required: true
          schema:
            enum:
              - 'https://api.instill.tech'
            type: string
          style: form
        - description: >-
            The grant type that indicate the OAuth 2.0 flow you are using.
            Please use `client_credentials`.
          explode: true
          in: query
          name: grant_type
          required: true
          schema:
            default: client_credentials
            enum:
              - client_credentials
            type: string
          style: form
      requestBody:
        $ref: '#/components/requestBodies/RequestToken'
      responses:
        '200':
          content:
            application/json:
              examples:
                OAuth2JWT:
                  $ref: '#/components/examples/OAuth2JWT'
              schema:
                $ref: '#/components/schemas/OAuth2JWT'
          description: Ok
        '400':
          content:
            application/problem+json:
              example:
                status: 400
                title: Bad Request
                detail: The detail will vary depending on the cause.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                status: 403
                title: Forbidden
                detail: >-
                  The request does not have access rights to the requested
                  resource.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Forbidden
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - basicAuth: []
      summary: Get a token
      tags:
        - Token
      x-code-samples:
        - lang: cURL
          source: |
            curl -X POST \
              -H 'Content-Length: 0' \
              -H 'Content-Type: application/json' \
              https://api.instill.tech/oauth2/token?audience=https://api.instill.tech&grant_type=client_credentials
  /clients:
    get:
      description: Get all the clients.
      operationId: getClients
      parameters:
        - description: 'How many items to return at one time (max: 100)'
          explode: true
          in: query
          name: limit
          required: false
          schema:
            default: 100
            format: int64
            maximum: 100
            minimum: 1
            type: integer
          style: form
        - description: The zero-ary offset index into the results
          explode: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int64
            minimum: 0
            type: integer
          style: form
      responses:
        '200':
          content:
            application/json:
              examples:
                userClients:
                  $ref: '#/components/examples/clients'
              schema:
                $ref: '#/components/schemas/Clients'
          description: Ok
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Get clients
      tags:
        - Client
      x-code-samples:
        - lang: cURL
          source: |
            curl -X GET \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer eyJhbGci...kU2gSqQw' \
              https://api.instill.tech/clients
    post:
      description: Create a client.
      operationId: postClient
      requestBody:
        $ref: '#/components/requestBodies/PostClient'
      responses:
        '201':
          content:
            application/json:
              examples:
                client:
                  $ref: '#/components/examples/postedClient'
              schema:
                $ref: '#/components/schemas/Client'
          description: Created
        '400':
          content:
            application/problem+json:
              example:
                status: 400
                title: Bad Request
                detail: The detail will vary depending on the cause.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Create a client
      tags:
        - Client
      x-code-samples:
        - lang: cURL
          source: |
            curl -X POST \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer eyJhbGci...kU2gSqQw' \
              -d '{
                "name": "client_1",
                "description": "This is a default client"
              }' \
              https://api.instill.tech/clients
  '/clients/{id}':
    delete:
      description: Delete a client and the related resources such as client grants.
      operationId: deleteClientByID
      parameters:
        - description: ID of the client
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Delete a client
      tags:
        - Client
      x-code-samples:
        - lang: cURL
          source: |
            curl -X DELETE \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer eyJhbGci...kU2gSqQw' \
              https://api.instill.tech/clients/9bsv0s3fomng02ns04kg
    get:
      description: Get details of a client.
      operationId: getClientByID
      parameters:
        - description: ID of the client
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                client:
                  $ref: '#/components/examples/client'
              schema:
                $ref: '#/components/schemas/Client'
          description: Ok
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Get a client
      tags:
        - Client
      x-code-samples:
        - lang: cURL
          source: |
            curl -X GET \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer eyJhbGci...kU2gSqQw' \
              https://api.instill.tech/clients/9bsv0s3fomng02ns04kg
    patch:
      description: >-
        Update a client. The `client_secret` can only be updated via
        `/clients/{id}/rotate-secret` endpoint.
      operationId: patchClientByID
      parameters:
        - description: ID of the client
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      requestBody:
        $ref: '#/components/requestBodies/PatchClient'
      responses:
        '200':
          content:
            application/json:
              examples:
                updatedClient:
                  $ref: '#/components/examples/updatedClient'
              schema:
                $ref: '#/components/schemas/Client'
          description: Ok
        '400':
          content:
            application/problem+json:
              example:
                status: 400
                title: Bad Request
                detail: The detail will vary depending on the cause.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Update a client
      tags:
        - Client
      x-code-samples:
        - lang: cURL
          source: |
            curl -X PATCH \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer eyJhbGci...kU2gSqQw' \
              -d '{
                "name": "Updated client",
                "description": "This is an updated client."
              }' \
              https://api.instill.tech/clients/9bsv0s3fomng02ns04kg
  '/clients/{id}/rotate-secret':
    post:
      description: Rotate the client secret of a client.
      operationId: rotateClientSecretByID
      parameters:
        - description: ID of the client
          explode: false
          in: path
          name: id
          required: true
          schema:
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                rotatedClient:
                  $ref: '#/components/examples/rotatedClient'
              schema:
                $ref: '#/components/schemas/Client'
          description: Ok
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Rotate a client secret
      tags:
        - Client
      x-code-samples:
        - lang: cURL
          source: |
            curl -X POST \
              -H 'Content-Length: 0' \
              -H 'Content-Type: application/json' \
              -H 'Authorization: Bearer eyJhbGci...kU2gSqQw' \
              https://api.instill.tech/clients/9bsv0s3fomng02ns04kg/rotate-secret
  /health/model:
    get:
      operationId: getModelHealth
      responses:
        '200':
          content:
            application/json:
              examples:
                health:
                  $ref: '#/components/examples/modelHealth'
              schema:
                $ref: '#/components/schemas/modelHealth'
          description: Server is ready for serving requests
        '503':
          content:
            application/problem+json:
              example:
                status: 503
                title: Service Unavailable
                detail: Model API is not ready
                duration: 0.01
              schema:
                $ref: '#/components/schemas/modelError'
          description: Service Unavailable
      summary: Get Model API health status
      tags:
        - Health
  /public/models:
    get:
      operationId: getPublicModels
      parameters:
        - description: How many models to return at one time (max 100)
          explode: true
          in: query
          name: limit
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: The zero-based offset index into the results
          explode: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Search query term (TBD)
          explode: true
          in: query
          name: q
          required: false
          schema:
            default: 'null'
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              examples:
                publicModels:
                  $ref: '#/components/examples/PublicModels'
              schema:
                allOf:
                  - $ref: '#/components/schemas/modelRequestInfo'
                  - $ref: '#/components/schemas/ResourceInfo'
                properties:
                  contents:
                    items:
                      $ref: '#/components/schemas/Model'
                    type: array
                type: object
          description: Success
        '400':
          content:
            application/problem+json:
              example:
                status: 400
                title: Bad Request
                detail: The detail will vary depending on the cause.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      summary: List of public models
      tags:
        - Model
  '/public/models/{id}':
    get:
      description: Returns model specified by id
      operationId: GetPublicModelById
      parameters:
        - description: model unique id
          explode: false
          in: path
          name: id
          required: true
          schema:
            example: c64j82t9481afoqqqa10
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                model:
                  $ref: '#/components/examples/Model'
              schema:
                allOf:
                  - $ref: '#/components/schemas/Model'
                  - $ref: '#/components/schemas/modelRequestInfo'
                type: object
          description: Success
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      summary: Find a public model
      tags:
        - Model
  '/public/models/{id}/versions':
    get:
      description: Returns list public model versions
      operationId: getPublicModelVersions
      parameters:
        - description: model unique id
          explode: false
          in: path
          name: id
          required: true
          schema:
            example: c64j82t9481afoqqqa10
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                modelVersions:
                  $ref: '#/components/examples/ListOfModelVersions'
              schema:
                allOf:
                  - $ref: '#/components/schemas/modelRequestInfo'
                  - $ref: '#/components/schemas/ResourceInfo'
                properties:
                  contents:
                    items:
                      $ref: '#/components/schemas/ModelVersion'
                    type: array
                type: object
          description: Success
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      summary: Get list of public model versions
      tags:
        - Model
  '/public/models/{id}/versions/{version}':
    get:
      description: Returns a public model version specified by id
      operationId: getPublicModelVersion
      parameters:
        - description: model unique id
          explode: false
          in: path
          name: id
          required: true
          schema:
            example: c64j82t9481afoqqqa10
            type: string
          style: simple
        - description: model version
          explode: false
          in: path
          name: version
          required: true
          schema:
            default: 1
            type: integer
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                modelVersion:
                  $ref: '#/components/examples/ModelVersion'
              schema:
                allOf:
                  - $ref: '#/components/schemas/ModelVersion'
                  - $ref: '#/components/schemas/modelRequestInfo'
          description: Success
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      summary: Find a public model version
      tags:
        - Model
  /models:
    get:
      operationId: getModels
      parameters:
        - description: >-
            Model visibility. If visibility is public, the api will query all
            public models which is yours or in your organization. If it is
            private, the api will query private models which is yours or in your
            organization.
          explode: true
          in: query
          name: visibility
          required: false
          schema:
            example: public
            type: string
          style: form
        - description: How many models to return at one time (max 100)
          explode: true
          in: query
          name: limit
          required: false
          schema:
            default: 10
            format: int32
            type: integer
          style: form
        - description: The zero-based offset index into the results
          explode: true
          in: query
          name: offset
          required: false
          schema:
            default: 0
            format: int32
            type: integer
          style: form
        - description: Search query term (TBD)
          explode: true
          in: query
          name: q
          required: false
          schema:
            default: 'null'
            type: string
          style: form
      responses:
        '200':
          content:
            application/json:
              examples:
                models:
                  $ref: '#/components/examples/ListOfModels'
              schema:
                allOf:
                  - $ref: '#/components/schemas/modelRequestInfo'
                  - $ref: '#/components/schemas/ResourceInfo'
                properties:
                  contents:
                    items:
                      $ref: '#/components/schemas/Model'
                    type: array
                type: object
          description: Success
        '400':
          content:
            application/problem+json:
              example:
                status: 400
                title: Bad Request
                detail: The detail will vary depending on the cause.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: List all your own models and models in your organization
      tags:
        - Model
    post:
      operationId: addModel
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadModelPayload'
        description: Model object that needs to be added to model server
        required: true
      responses:
        '201':
          content:
            application/json:
              examples:
                postedModel:
                  $ref: '#/components/examples/Model'
              schema:
                allOf:
                  - $ref: '#/components/schemas/Model'
                  - $ref: '#/components/schemas/modelRequestInfo'
                  - $ref: '#/components/schemas/ResourceInfo'
          description: Success
        '400':
          content:
            application/problem+json:
              example:
                status: 400
                title: Bad Request
                detail: The detail will vary depending on the cause.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Bad Request
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Upload a model to the server
      tags:
        - Model
  '/models/{id}':
    delete:
      description: Returns status
      operationId: deleteModelById
      parameters:
        - description: model unique id
          explode: false
          in: path
          name: id
          required: true
          schema:
            example: c64j82t9481afoqqqa10
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                status: 403
                title: Forbidden
                detail: >-
                  The request does not have access rights to the requested
                  resource.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Forbidden
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Delete a your own model
      tags:
        - Model
    get:
      description: Returns model specified by id
      operationId: getModelById
      parameters:
        - description: model unique id
          explode: false
          in: path
          name: id
          required: true
          schema:
            example: c64j82t9481afoqqqa10
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                model:
                  $ref: '#/components/examples/Model'
              schema:
                allOf:
                  - $ref: '#/components/schemas/Model'
                  - $ref: '#/components/schemas/modelRequestInfo'
                type: object
          description: Success
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                status: 403
                title: Forbidden
                detail: >-
                  The request does not have access rights to the requested
                  resource.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Forbidden
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Find a your own model or a model in your organization
      tags:
        - Model
    patch:
      description: Returns a model specified by id
      operationId: updateModelById
      parameters:
        - description: model unique id
          explode: false
          in: path
          name: id
          required: true
          schema:
            example: c64j82t9481afoqqqa10
            type: string
          style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateModelPayload'
        description: Model information that needs to be updated
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                patchedModel:
                  $ref: '#/components/examples/Model'
              schema:
                allOf:
                  - $ref: '#/components/schemas/Model'
                  - $ref: '#/components/schemas/modelRequestInfo'
                  - $ref: '#/components/schemas/ResourceInfo'
          description: Success
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                status: 403
                title: Forbidden
                detail: >-
                  The request does not have access rights to the requested
                  resource.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Forbidden
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Update a your own model
      tags:
        - Model
  '/models/{id}/versions':
    get:
      description: >-
        Returns list of model versions which belong to your own model or your
        organization's model specified by id
      operationId: getModelVersions
      parameters:
        - description: model unique id
          explode: false
          in: path
          name: id
          required: true
          schema:
            example: c64j82t9481afoqqqa10
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                modelVersions:
                  $ref: '#/components/examples/ListOfModelVersions'
              schema:
                allOf:
                  - $ref: '#/components/schemas/modelRequestInfo'
                  - $ref: '#/components/schemas/ResourceInfo'
                properties:
                  contents:
                    items:
                      $ref: '#/components/schemas/ModelVersion'
                    type: array
                type: object
          description: Success
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                status: 403
                title: Forbidden
                detail: >-
                  The request does not have access rights to the requested
                  resource.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Forbidden
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: >-
        Get list of your own model versions or model versions in your
        organization
      tags:
        - Model
    post:
      description: Returns a model version which belong to your own model specified by id
      operationId: uploadModelVersion
      parameters:
        - description: model unique id
          explode: false
          in: path
          name: id
          required: true
          schema:
            example: c64j82t9481afoqqqa10
            type: string
          style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UploadModelVersionPayload'
        description: model information that needs to be updated
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                modelVersion:
                  $ref: '#/components/examples/ModelVersion'
              schema:
                allOf:
                  - $ref: '#/components/schemas/ModelVersion'
                  - $ref: '#/components/schemas/modelRequestInfo'
                type: object
          description: Success
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                status: 403
                title: Forbidden
                detail: >-
                  The request does not have access rights to the requested
                  resource.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Forbidden
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Upload a model version
      tags:
        - Model
  '/models/{id}/versions/{version}':
    delete:
      description: Returns status
      operationId: deleteModelVersion
      parameters:
        - description: model unique id
          explode: false
          in: path
          name: id
          required: true
          schema:
            example: c64j82t9481afoqqqa10
            type: string
          style: simple
        - description: model version
          explode: false
          in: path
          name: version
          required: true
          schema:
            default: 1
            type: integer
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                status: 403
                title: Forbidden
                detail: >-
                  The request does not have access rights to the requested
                  resource.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Forbidden
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Delete a your own model version
      tags:
        - Model
    get:
      description: >-
        Returns a model version which belong to your own model or your
        organization' model specified by id
      operationId: getModelVersion
      parameters:
        - description: model unique id
          explode: false
          in: path
          name: id
          required: true
          schema:
            example: c64j82t9481afoqqqa10
            type: string
          style: simple
        - description: model version
          explode: false
          in: path
          name: version
          required: true
          schema:
            default: 1
            type: integer
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                modelVersion:
                  $ref: '#/components/examples/ModelVersion'
              schema:
                allOf:
                  - $ref: '#/components/schemas/ModelVersion'
                  - $ref: '#/components/schemas/modelRequestInfo'
          description: Success
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                status: 403
                title: Forbidden
                detail: >-
                  The request does not have access rights to the requested
                  resource.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Forbidden
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Find a your own model version or a model version in your organization
      tags:
        - Model
    patch:
      description: >-
        Returns updated model version which belong to your own model specified
        by id
      operationId: updateModelVersion
      parameters:
        - description: model unique id
          explode: false
          in: path
          name: id
          required: true
          schema:
            example: c64j82t9481afoqqqa10
            type: string
          style: simple
        - description: model version
          explode: false
          in: path
          name: version
          required: true
          schema:
            default: 1
            type: integer
          style: simple
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateModelVersionPayload'
        description: Update model version information
        required: true
      responses:
        '200':
          content:
            application/json:
              examples:
                updatedModelVersion:
                  $ref: '#/components/examples/ModelVersion'
              schema:
                allOf:
                  - $ref: '#/components/schemas/ModelVersion'
                  - $ref: '#/components/schemas/modelRequestInfo'
          description: Success
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Unauthorized
        '403':
          content:
            application/problem+json:
              example:
                status: 403
                title: Forbidden
                detail: >-
                  The request does not have access rights to the requested
                  resource.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Forbidden
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/modelError'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Update a your own model version
      tags:
        - Model
  /health/pipeline:
    get:
      description: Get Pipelines API health status
      operationId: getPipelineHealth
      responses:
        '200':
          content:
            application/json:
              examples:
                health:
                  $ref: '#/components/examples/pipelineHealth'
              schema:
                $ref: '#/components/schemas/pipelineHealth'
          description: Ok
        '503':
          content:
            application/problem+json:
              example:
                status: 503
                title: Service Unavailable
                detail: Pipelines API is not ready
                duration: 0.01
              schema:
                $ref: '#/components/schemas/Error'
          description: Service Unavailable
      summary: Get Pipelines API health status
      tags:
        - Health
      x-code-samples:
        - lang: cURL
          source: |
            curl -X GET https://openapi.instill.tech/health/pipelines/
  /pipelines:
    get:
      description: List pipelines
      operationId: listPipeline
      parameters:
        - description: >-
            Return recipe in the response of listing pipeline, false if this
            parameter is unassigned
          explode: true
          in: query
          name: with_recipe
          required: false
          schema:
            type: boolean
          style: form
      responses:
        '200':
          content:
            application/json:
              examples:
                Pipelines:
                  $ref: '#/components/examples/PipelinesResp'
              schema:
                $ref: '#/components/schemas/PipelinesResp'
          description: Ok
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: List pipelines
      tags:
        - Pipeline
    post:
      description: Add a new pipeline
      operationId: addPipeline
      requestBody:
        $ref: '#/components/requestBodies/CreatePipeline'
      responses:
        '201':
          content:
            application/json:
              examples:
                getpipeline:
                  $ref: '#/components/examples/PipelineWithRecipeResp'
              schema:
                $ref: '#/components/schemas/PipelineWithRecipeResp'
          description: ok
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '422':
          content:
            application/problem+json:
              example:
                status: 422
                title: Unprocessable Entity
                detail: >-
                  The request entity is correct, but it was unable to process
                  the contained instructions
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Add a new pipeline
      tags:
        - Pipeline
  '/pipelines/{id}':
    delete:
      description: Delete a pipeline
      operationId: deletePipeline
      parameters:
        - description: The unique id of Instill Pipeline
          explode: false
          in: path
          name: id
          required: true
          schema:
            description: the id of this entity
            example: c5lt874bcv45n036o8qg
            maxLength: 20
            minLength: 20
            type: string
          style: simple
      responses:
        '204':
          description: No Content
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Delete a pipeline
      tags:
        - Pipeline
    get:
      description: Find pipeline by ID
      operationId: getPipelineById
      parameters:
        - description: The unique id of Instill Pipeline
          explode: false
          in: path
          name: id
          required: true
          schema:
            description: the id of this entity
            example: c5lt874bcv45n036o8qg
            maxLength: 20
            minLength: 20
            type: string
          style: simple
      responses:
        '200':
          content:
            application/json:
              examples:
                getpipeline:
                  $ref: '#/components/examples/PipelineWithRecipeResp'
              schema:
                $ref: '#/components/schemas/PipelineWithRecipeResp'
          description: ok
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Find pipeline by ID
      tags:
        - Pipeline
    patch:
      description: Update a existing pipeline
      operationId: updatePipeline
      parameters:
        - description: The unique id of Instill Pipeline
          explode: false
          in: path
          name: id
          required: true
          schema:
            description: the id of this entity
            example: c5lt874bcv45n036o8qg
            maxLength: 20
            minLength: 20
            type: string
          style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdatePipeline'
      responses:
        '200':
          content:
            application/json:
              examples:
                getpipeline:
                  $ref: '#/components/examples/PipelineWithRecipeResp'
              schema:
                $ref: '#/components/schemas/PipelineWithRecipeResp'
          description: ok
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '422':
          content:
            application/problem+json:
              example:
                status: 422
                title: Unprocessable Entity
                detail: >-
                  The request entity is correct, but it was unable to process
                  the contained instructions
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Update a existing pipeline
      tags:
        - Pipeline
  '/pipelines/{id}/outputs':
    post:
      description: Trigger a pipeline
      operationId: triggerPipeline
      parameters:
        - description: The unique id of Instill Pipeline
          explode: false
          in: path
          name: id
          required: true
          schema:
            description: the id of this entity
            example: c5lt874bcv45n036o8qg
            maxLength: 20
            minLength: 20
            type: string
          style: simple
      requestBody:
        $ref: '#/components/requestBodies/ImageJsonInputs'
      responses:
        '200':
          content:
            application/json:
              examples:
                detectionOutputs:
                  $ref: '#/components/examples/DetectionOutputs'
              schema:
                $ref: '#/components/schemas/pipelineDetectionOutputs'
          description: Ok
        '401':
          content:
            application/problem+json:
              example:
                status: 401
                title: Unauthorized
                detail: Request is unauthorized.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unauthorized
        '404':
          content:
            application/problem+json:
              example:
                status: 404
                title: Not Found
                detail: The requested resource is not found.
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Not Found
        '422':
          content:
            application/problem+json:
              example:
                status: 422
                title: Unprocessable Entity
                detail: >-
                  The request entity is correct, but it was unable to process
                  the contained instructions
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Unprocessable Entity
        '500':
          content:
            application/problem+json:
              example:
                status: 500
                title: Internal Server Error
                detail: >-
                  Something went wrong. Retry or contact support at
                  hello@instill.tech
                duration: 0.05
              schema:
                $ref: '#/components/schemas/Error'
          description: Internal Server Error
      security:
        - bearerAuth: []
      summary: Trigger a pipeline
      tags:
        - Pipeline
components:
  securitySchemes:
    basicAuth:
      type: http
      description: Request an access token using base64-encoded client credentials
      scheme: basic
    bearerAuth:
      type: http
      description: >-
        Get access to the Instill APIs using the [OAuth 2.0 Authorization
        framework](https://datatracker.ietf.org/doc/html/rfc6749)
      scheme: bearer
      bearerFormat: JWT
  schemas:
    RequestInfo:
      properties:
        duration:
          description: The duration in seconds (s) it takes for a request to be processed
          format: double
          type: number
    ImageJsonInput:
      example:
        base64: base64
        url: 'http://example.com/aeiou'
      properties:
        url:
          description: >-
            URL of the image to process. Only one of "url" or "base64" should be
            specified.
          format: url
          type: string
        base64:
          description: >-
            Base64-encoded representation of the image to process. Only one of
            "url" or "base64" should be specified.
          format: base64
          type: string
      type: object
    ImageJsonInputs:
      example:
        contents:
          - base64: base64
            url: 'http://example.com/aeiou'
          - base64: base64
            url: 'http://example.com/aeiou'
          - base64: base64
            url: 'http://example.com/aeiou'
          - base64: base64
            url: 'http://example.com/aeiou'
          - base64: base64
            url: 'http://example.com/aeiou'
      properties:
        contents:
          description: >-
            Images to process. Maximum 32 images per request. Each image must be
            less than 4MB.
          items:
            $ref: '#/components/schemas/ImageJsonInput'
          maxItems: 32
          type: array
      required:
        - contents
      type: object
    ImageFormDataInputs:
      properties:
        contents:
          description: >-
            Images to process. Maximum 32 images per request. Each image must be
            less than 4MB.
          items:
            format: binary
            type: string
          maxItems: 32
          type: array
      required:
        - contents
      type: object
    CategoryPrediction:
      example:
        score: 0.8008282
        kind: CategoryPrediction
        category: category
      properties:
        kind:
          default: CategoryPrediction
          description: Type of this resource
          type: string
        category:
          description: Category name
          type: string
        score:
          description: Score between 0 and 1 for this category.
          format: float
          type: number
      type: object
    ClassificationOutput:
      example:
        contents:
          - score: 0.8008282
            kind: CategoryPrediction
            category: category
          - score: 0.8008282
            kind: CategoryPrediction
            category: category
        kind: Collection
      properties:
        kind:
          default: Collection
          description: Type of this resource
          type: string
        contents:
          description: >-
            Array of categories predicted for this image. Each array element
            represents a predicted category. The category with the highest score
            is the one that most likely represents the content of the image
            sent.
          items:
            $ref: '#/components/schemas/CategoryPrediction'
          type: array
      required:
        - contents
      type: object
    ClassificationOutputs:
      allOf:
        - $ref: '#/components/schemas/RequestInfo'
      example:
        contents:
          - contents:
              - score: 0.8008282
                kind: CategoryPrediction
                category: category
              - score: 0.8008282
                kind: CategoryPrediction
                category: category
            kind: Collection
          - contents:
              - score: 0.8008282
                kind: CategoryPrediction
                category: category
              - score: 0.8008282
                kind: CategoryPrediction
                category: category
            kind: Collection
        kind: Collection
      properties:
        kind:
          default: Collection
          description: Type of this resource
          type: string
        contents:
          description: >-
            Array of classification outputs. Each array element represents the
            output for one image.
          items:
            $ref: '#/components/schemas/ClassificationOutput'
          type: array
      required:
        - contents
      type: object
    Box:
      description: Bounding box localising the object
      example:
        top: 6.0274563
        left: 1.4658129
        width: 5.962134
        height: 5.637377
      properties:
        top:
          description: Top coordinate of the bounding box
          format: float
          type: number
        left:
          description: Left coordinate of the bounding box
          format: float
          type: number
        width:
          description: Width of the bounding box
          format: float
          type: number
        height:
          description: Height of the bounding box
          format: float
          type: number
      type: object
    BoundingBoxPrediction:
      example:
        score: 0.8008282
        kind: BoundingBoxPrediction
        box:
          top: 6.0274563
          left: 1.4658129
          width: 5.962134
          height: 5.637377
        category: category
      properties:
        kind:
          default: BoundingBoxPrediction
          description: Type of this resource
          type: string
        category:
          description: Category name
          type: string
        score:
          description: Score between 0 and 1 for this bounding box.
          format: float
          type: number
        box:
          $ref: '#/components/schemas/Box'
      type: object
    DetectionOutput:
      example:
        contents:
          - score: 0.8008282
            kind: BoundingBoxPrediction
            box:
              top: 6.0274563
              left: 1.4658129
              width: 5.962134
              height: 5.637377
            category: category
          - score: 0.8008282
            kind: BoundingBoxPrediction
            box:
              top: 6.0274563
              left: 1.4658129
              width: 5.962134
              height: 5.637377
            category: category
        kind: Collection
      properties:
        kind:
          default: Collection
          description: Type of this resource
          type: string
        contents:
          description: >-
            Array of bounding boxes predicted for this image. Each array element
            represents a bounding box. The array will be empty if no object was
            detected.
          items:
            $ref: '#/components/schemas/BoundingBoxPrediction'
          type: array
      required:
        - contents
      type: object
    DetectionOutputs:
      allOf:
        - $ref: '#/components/schemas/RequestInfo'
      example:
        contents:
          - contents:
              - score: 0.8008282
                kind: BoundingBoxPrediction
                box:
                  top: 6.0274563
                  left: 1.4658129
                  width: 5.962134
                  height: 5.637377
                category: category
              - score: 0.8008282
                kind: BoundingBoxPrediction
                box:
                  top: 6.0274563
                  left: 1.4658129
                  width: 5.962134
                  height: 5.637377
                category: category
            kind: Collection
          - contents:
              - score: 0.8008282
                kind: BoundingBoxPrediction
                box:
                  top: 6.0274563
                  left: 1.4658129
                  width: 5.962134
                  height: 5.637377
                category: category
              - score: 0.8008282
                kind: BoundingBoxPrediction
                box:
                  top: 6.0274563
                  left: 1.4658129
                  width: 5.962134
                  height: 5.637377
                category: category
            kind: Collection
        kind: Collection
      properties:
        kind:
          default: Collection
          description: Type of this resource
          type: string
        contents:
          description: >-
            Array of detection outputs. Each array element represents the output
            for one image.
          items:
            $ref: '#/components/schemas/DetectionOutput'
          type: array
      required:
        - contents
      type: object
    Error:
      allOf:
        - $ref: '#/components/schemas/pipelineRequestInfo'
      properties:
        status:
          description: Error code
          type: integer
        title:
          description: Short description of the error
          type: string
        detail:
          description: Human-readable error message
          type: string
      type: object
    Health:
      allOf:
        - $ref: '#/components/schemas/RequestInfo'
      example:
        status: status
      properties:
        status:
          description: The status of the API health
          type: string
      type: object
    managementHealth:
      allOf:
        - $ref: '#/components/schemas/RequestInfo'
      example:
        status: status
      properties:
        status:
          description: The status of the API health
          type: string
      required:
        - status
      type: object
    PostClient:
      example:
        name: name
        description: description
      properties:
        name:
          description: Name of the client
          type: string
        description:
          description: Long description of the client
          type: string
      required:
        - name
      type: object
    PatchClient:
      example:
        name: name
        description: description
      properties:
        name:
          description: Name of the client
          type: string
        description:
          description: Long description of the client
          type: string
      type: object
    Client:
      allOf:
        - $ref: '#/components/schemas/RequestInfo'
      example:
        updated_at: '2000-01-23T04:56:07.000+00:00'
        kind: Client
        name: name
        self: 'http://example.com/aeiou'
        description: description
        created_at: '2000-01-23T04:56:07.000+00:00'
        id: id
        secret: secret
      properties:
        self:
          description: Endpoint that generated this resource
          format: url
          type: string
        kind:
          default: Client
          description: Type of this resource
          type: string
        id:
          description: ID of the client
          type: string
        secret:
          description: Secret of the client
          type: string
        name:
          description: Name of the client
          type: string
        description:
          description: Long description of the client
          type: string
        created_at:
          description: the time when the client was created
          format: date-time
          type: string
        updated_at:
          description: the time when the client was updated
          format: date-time
          type: string
      required:
        - created_at
        - id
        - kind
        - name
        - self
        - updated_at
      type: object
    Clients:
      allOf:
        - $ref: '#/components/schemas/RequestInfo'
      example:
        contents:
          - updated_at: '2000-01-23T04:56:07.000+00:00'
            kind: Client
            name: name
            self: 'http://example.com/aeiou'
            description: description
            created_at: '2000-01-23T04:56:07.000+00:00'
            id: id
            secret: secret
          - updated_at: '2000-01-23T04:56:07.000+00:00'
            kind: Client
            name: name
            self: 'http://example.com/aeiou'
            description: description
            created_at: '2000-01-23T04:56:07.000+00:00'
            id: id
            secret: secret
        kind: Collections
        self: 'http://example.com/aeiou'
      properties:
        self:
          description: Endpoint that generated this resource
          format: url
          type: string
        kind:
          default: Collections
          description: Type of this resource
          type: string
        contents:
          description: A list of clients. Each element represents a client.
          items:
            $ref: '#/components/schemas/Client'
          type: array
      required:
        - contents
        - id
        - kind
        - self
      type: object
    RequestModelToken:
      example:
        task: classification
        model_id: model_id
        version: 0
      properties:
        model_id:
          description: ID of the model
          type: string
        task:
          description: Task of the model
          enum:
            - classification
            - detection
          type: string
        version:
          description: Version of the model
          format: int64
          type: integer
      required:
        - model_id
        - task
        - version
      type: object
    RequestModelsToken:
      example:
        contents:
          - task: classification
            model_id: model_id
            version: 0
          - task: classification
            model_id: model_id
            version: 0
          - task: classification
            model_id: model_id
            version: 0
          - task: classification
            model_id: model_id
            version: 0
          - task: classification
            model_id: model_id
            version: 0
      properties:
        contents:
          description: Models to include in the token. Maximum 10 models per request.
          items:
            $ref: '#/components/schemas/RequestModelToken'
          maxItems: 10
          type: array
      type: object
    OAuth2JWT:
      example:
        access_token: access_token
        kind: OAuth2JWT
        expiry: '2000-01-23T04:56:07.000+00:00'
        token_type: Bearer
        expires_in: 0
      properties:
        kind:
          default: OAuth2JWT
          description: Type of this resource
          type: string
        access_token:
          description: Access token
          type: string
        expires_in:
          description: Token lifetime in seconds
          format: int64
          type: integer
        expiry:
          description: Expiration time of the token
          format: date-time
          type: string
        token_type:
          default: Bearer
          description: Type of the token
          type: string
      required:
        - access_token
        - expires_in
        - kind
        - token_type
      type: object
    UpdateModelVersionPayload:
      properties:
        description:
          description: Model version description
          maxLength: 1024
          type: string
        metadata:
          description: Model version metadata
          type: string
      type: object
    UploadModelVersionPayload:
      properties:
        description:
          description: Model version description
          maxLength: 1024
          type: string
        source:
          description: Model weight and configuration following Triton format
          format: binary
          type: string
        metadata:
          description: Model version metadata
          type: string
      required:
        - source
      type: object
    UpdateModelPayload:
      properties:
        name:
          description: Model name
          type: string
        description:
          description: Model description
          maxLength: 1024
          type: string
        visibility:
          default: private
          description: Model visibility (public or private)
          enum:
            - public
            - private
          type: string
      type: object
    UploadModelPayload:
      properties:
        name:
          description: Model name
          maxLength: 256
          type: string
        description:
          description: Model description
          maxLength: 1024
          type: string
        type:
          default: tensorrt
          description: >-
            Model type such as tensorrt, onmx, etc (currently we only support
            tensorrt)
          enum:
            - tensorrt
          type: string
        framework:
          default: pytorch
          description: >-
            Model framework such as pytorch, tensorflow, etc (currently we only
            support pytorch framework)
          enum:
            - pytorch
          type: string
        optimized:
          default: false
          description: >-
            Model optimization enable or not (currently we not support
            optimizing model yet)
          type: boolean
        source:
          description: Model weight and configuration following Triton format
          format: binary
          type: string
        visibility:
          default: private
          description: Model visibility (public or private)
          enum:
            - public
            - private
          type: string
      required:
        - framework
        - name
        - source
        - type
      type: object
    modelRequestInfo:
      properties:
        duration:
          description: >-
            The duration in milliseconds (s) it takes for a request to be
            processed
          example: 0.05
          format: double
          type: number
    ResourceInfo:
      properties:
        self:
          description: Endpoint that generated this resource
          format: url
          type: string
        kind:
          description: Type of this resource
          type: string
    ModelVersion:
      allOf:
        - $ref: '#/components/schemas/ResourceInfo'
      properties:
        version:
          default: 1
          description: Model version
          type: integer
        description:
          description: Model description
          maxLength: 1024
          type: string
        created_at:
          description: Model version created date time
          format: date-time
          type: string
        updated_at:
          description: Model version updated date time
          format: date-time
          type: string
        metadata:
          description: Model version metadata
          type: object
        status:
          default: offline
          description: Model version status
          enum:
            - offline
            - online
            - error
          type: string
      type: object
    Model:
      allOf:
        - $ref: '#/components/schemas/ResourceInfo'
      properties:
        name:
          description: Model name
          maxLength: 256
          type: string
        id:
          description: Model unique ID
          maxLength: 256
          type: string
        optimized:
          default: false
          description: Option for model optimization (currently not support yet)
          type: boolean
        description:
          description: Model description
          maxLength: 1024
          type: string
        type:
          default: tensorrt
          description: Supportted model type (current only support tensorrt)
          enum:
            - tensorrt
          type: string
        framework:
          default: pytorch
          description: Supportted framework (current only support pytorch)
          enum:
            - pytorch
          type: string
        created_at:
          description: Model created date time
          format: date-time
          type: string
        updated_at:
          description: Model updated date time
          format: date-time
          type: string
        organization:
          description: Organization in which model belong to
          type: string
        icon:
          description: Model icon url
          type: string
        visibility:
          default: private
          description: Model visibility (public or private)
          enum:
            - public
            - private
          type: string
        versions:
          description: List of model versions
          items:
            $ref: '#/components/schemas/ModelVersion'
          type: array
      type: object
    modelError:
      allOf:
        - $ref: '#/components/schemas/modelRequestInfo'
      properties:
        status:
          description: Error code
          type: integer
        title:
          description: Short description of the error
          type: string
        detail:
          description: Human-readable error message
          type: string
      type: object
    modelHealth:
      allOf:
        - $ref: '#/components/schemas/modelRequestInfo'
      example:
        status: 0
      properties:
        status:
          description: The status of the API health
          type: integer
      type: object
    pipelineRequestInfo:
      properties:
        duration:
          description: The duration in seconds (s) it takes for a request to be processed
          format: double
          type: number
      type: object
    pipelineResourceInfo:
      properties:
        kind:
          default: Pipeline
          description: Type of this resource
          type: string
        self:
          description: Self-descriptive in itself
          type: string
      type: object
    TimeInfo:
      properties:
        created_at:
          description: the time when entity created
          format: date-time
          type: string
        updated_at:
          description: the time when entity has been updated
          format: date-time
          type: string
      type: object
    DataSource:
      example:
        name: name
        description: description
        type: type
      properties:
        type:
          description: a unique kind of data source
          type: string
        name:
          description: the name of this data source
          type: string
        description:
          description: the description of this data source
          type: string
      type: object
    VisualDataOperator:
      example:
        sequence: 6
        model_id: model_id
        version: 0
      properties:
        model_id:
          description: the model id to operate
          type: string
        version:
          description: the version of this model to operate
          type: integer
        sequence:
          description: the 1 based sequence number
          type: integer
      type: object
    VisualDataOperators:
      items:
        $ref: '#/components/schemas/VisualDataOperator'
      type: array
    LogicOperator:
      example:
        type: type
      properties:
        type:
          description: the type of logic operator
          type: string
      type: object
    LogicOperators:
      items:
        $ref: '#/components/schemas/LogicOperator'
      type: array
    DataDestination:
      example:
        name: name
        description: description
        type: type
      properties:
        type:
          description: a unique kind of data source
          type: string
        name:
          description: the name of this data source
          type: string
        description:
          description: the description of this data source
          type: string
      type: object
    Recipe:
      example:
        visual_data_operator:
          - sequence: 6
            model_id: model_id
            version: 0
          - sequence: 6
            model_id: model_id
            version: 0
        logic_operator:
          - type: type
          - type: type
        data_destination:
          name: name
          description: description
          type: type
        data_source:
          name: name
          description: description
          type: type
      properties:
        data_source:
          $ref: '#/components/schemas/DataSource'
        visual_data_operator:
          items:
            $ref: '#/components/schemas/VisualDataOperator'
          type: array
        logic_operator:
          items:
            $ref: '#/components/schemas/LogicOperator'
          type: array
        data_destination:
          $ref: '#/components/schemas/DataDestination'
      type: object
    PipelineId:
      properties:
        id:
          description: the id of this Instill Pipeline
          type: string
      type: object
    Pipeline:
      properties:
        name:
          description: the name of this Instill Pipeline
          type: string
        description:
          description: the more detail of this Instill Pipeline
          type: string
        active:
          type: boolean
      type: object
    CreatePipelineReq:
      allOf:
        - $ref: '#/components/schemas/Pipeline'
      example:
        recipe:
          visual_data_operator:
            - sequence: 6
              model_id: model_id
              version: 0
            - sequence: 6
              model_id: model_id
              version: 0
          logic_operator:
            - type: type
            - type: type
          data_destination:
            name: name
            description: description
            type: type
          data_source:
            name: name
            description: description
            type: type
      properties:
        recipe:
          $ref: '#/components/schemas/Recipe'
      required:
        - active
        - name
        - recipe
      type: object
    UpdatePipelineReq:
      allOf:
        - $ref: '#/components/schemas/Pipeline'
      example:
        recipe:
          visual_data_operator:
            - sequence: 6
              model_id: model_id
              version: 0
            - sequence: 6
              model_id: model_id
              version: 0
          logic_operator:
            - type: type
            - type: type
          data_destination:
            name: name
            description: description
            type: type
          data_source:
            name: name
            description: description
            type: type
      properties:
        recipe:
          $ref: '#/components/schemas/Recipe'
      type: object
    pipelineHealth:
      allOf:
        - $ref: '#/components/schemas/pipelineRequestInfo'
      example:
        status: status
      properties:
        status:
          description: The status of the API health
          type: string
      type: object
    PipelineWithRecipeResp:
      allOf:
        - $ref: '#/components/schemas/PipelineId'
        - $ref: '#/components/schemas/Pipeline'
        - $ref: '#/components/schemas/TimeInfo'
        - $ref: '#/components/schemas/pipelineResourceInfo'
        - $ref: '#/components/schemas/pipelineRequestInfo'
      example:
        recipe:
          visual_data_operator:
            - sequence: 6
              model_id: model_id
              version: 0
            - sequence: 6
              model_id: model_id
              version: 0
          logic_operator:
            - type: type
            - type: type
          data_destination:
            name: name
            description: description
            type: type
          data_source:
            name: name
            description: description
            type: type
      properties:
        recipe:
          $ref: '#/components/schemas/Recipe'
      type: object
    PipelinesResp:
      allOf:
        - $ref: '#/components/schemas/pipelineRequestInfo'
        - $ref: '#/components/schemas/pipelineResourceInfo'
      example:
        total: 0
        items:
          - ''
          - ''
      properties:
        total:
          format: int64
          type: integer
        items:
          items:
            allOf:
              - $ref: '#/components/schemas/PipelineId'
              - $ref: '#/components/schemas/Pipeline'
              - $ref: '#/components/schemas/TimeInfo'
              - $ref: '#/components/schemas/pipelineResourceInfo'
          type: array
      type: object
    pipelineBoundingBoxPrediction:
      example:
        score: 0.8008282
        kind: kind
        box:
          top: 6.0274563
          left: 1.4658129
          width: 5.962134
          height: 5.637377
        category: category
      properties:
        kind:
          description: Type of this resource
          type: string
        category:
          description: Category name
          type: string
        score:
          description: Score between 0 and 1 for this bounding box.
          format: float
          type: number
        box:
          $ref: '#/components/schemas/Box'
      type: object
    pipelineDetectionOutput:
      example:
        contents:
          - score: 0.8008282
            kind: kind
            box:
              top: 6.0274563
              left: 1.4658129
              width: 5.962134
              height: 5.637377
            category: category
          - score: 0.8008282
            kind: kind
            box:
              top: 6.0274563
              left: 1.4658129
              width: 5.962134
              height: 5.637377
            category: category
        kind: kind
      properties:
        kind:
          description: Type of this resource
          type: string
        contents:
          description: >-
            Array of bounding boxes predicted for this image. Each array element
            represents a bounding box. The array will be empty if no object was
            detected.
          items:
            $ref: '#/components/schemas/pipelineBoundingBoxPrediction'
          type: array
      required:
        - contents
      type: object
    pipelineDetectionOutputs:
      allOf:
        - $ref: '#/components/schemas/pipelineRequestInfo'
      example:
        contents:
          - contents:
              - score: 0.8008282
                kind: kind
                box:
                  top: 6.0274563
                  left: 1.4658129
                  width: 5.962134
                  height: 5.637377
                category: category
              - score: 0.8008282
                kind: kind
                box:
                  top: 6.0274563
                  left: 1.4658129
                  width: 5.962134
                  height: 5.637377
                category: category
            kind: kind
          - contents:
              - score: 0.8008282
                kind: kind
                box:
                  top: 6.0274563
                  left: 1.4658129
                  width: 5.962134
                  height: 5.637377
                category: category
              - score: 0.8008282
                kind: kind
                box:
                  top: 6.0274563
                  left: 1.4658129
                  width: 5.962134
                  height: 5.637377
                category: category
            kind: kind
        kind: Collection
      properties:
        kind:
          default: Collection
          description: Type of this resource
          type: string
        contents:
          description: >-
            Array of detection outputs. Each array element represents the output
            for one image.
          items:
            $ref: '#/components/schemas/pipelineDetectionOutput'
          type: array
      type: object
  responses:
    BadRequestError:
      content:
        application/problem+json:
          example:
            status: 400
            title: Bad Request
            detail: The detail will vary depending on the cause.
            duration: 0.05
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    UnauthorizedError:
      content:
        application/problem+json:
          example:
            status: 401
            title: Unauthorized
            detail: Request is unauthorized.
            duration: 0.05
          schema:
            $ref: '#/components/schemas/modelError'
      description: Unauthorized
    ServerError:
      content:
        application/problem+json:
          example:
            status: 500
            title: Internal Server Error
            detail: >-
              Something went wrong. Retry or contact support at
              hello@instill.tech
            duration: 0.05
          schema:
            $ref: '#/components/schemas/Error'
      description: Internal Server Error
    ServiceUnavailable:
      content:
        application/problem+json:
          example:
            status: 503
            title: Service Unavailable
            detail: Inference API is not ready
            duration: 0.01
          schema:
            $ref: '#/components/schemas/Error'
      description: Service Unavailable
    NoContentResponse:
      description: No Content
    ForbiddenError:
      content:
        application/problem+json:
          example:
            status: 403
            title: Forbidden
            detail: The request does not have access rights to the requested resource.
            duration: 0.05
          schema:
            $ref: '#/components/schemas/Error'
      description: Forbidden
    NotFoundError:
      content:
        application/problem+json:
          example:
            status: 404
            title: Not Found
            detail: The requested resource is not found.
            duration: 0.05
          schema:
            $ref: '#/components/schemas/Error'
      description: Not Found
    InternalServerError:
      content:
        application/problem+json:
          example:
            status: 500
            title: Internal Server Error
            detail: >-
              Something went wrong. Retry or contact support at
              hello@instill.tech
            duration: 0.05
          schema:
            $ref: '#/components/schemas/modelError'
      description: Internal Server Error
    ServiceUnavailableError:
      content:
        application/problem+json:
          example:
            status: 503
            title: Service Unavailable Error
            detail: Management API is not ready
            duration: 0.05
          schema:
            $ref: '#/components/schemas/modelError'
      description: Service Unavailable
    modelBadRequestError:
      content:
        application/problem+json:
          example:
            status: 400
            title: Bad Request
            detail: The detail will vary depending on the cause.
            duration: 0.05
          schema:
            $ref: '#/components/schemas/modelError'
      description: Bad Request
    pipelineBadRequestError:
      content:
        application/problem+json:
          example:
            status: 400
            title: Bad Request
            detail: The detail will vary depending on the cause.
            duration: 0.05
          schema:
            $ref: '#/components/schemas/Error'
      description: Bad Request
    pipelineUnauthorizedError:
      content:
        application/problem+json:
          example:
            status: 401
            title: Unauthorized
            detail: Request is unauthorized.
            duration: 0.05
          schema:
            $ref: '#/components/schemas/Error'
      description: Unauthorized
    UnprocessableEntityError:
      content:
        application/problem+json:
          example:
            status: 422
            title: Unprocessable Entity
            detail: >-
              The request entity is correct, but it was unable to process the
              contained instructions
            duration: 0.05
          schema:
            $ref: '#/components/schemas/Error'
      description: Unprocessable Entity
  examples:
    Health:
      summary: The health status of Inference API
      value:
        status: ok
        duration: 0.1
    ImageJsonInputs:
      summary: >-
        A list of images to process. Maximum 32 images per request. Each image
        must be less than 4MB.
      value:
        contents:
          - url: 'https://artifacts.instill.tech/dog.jpg'
          - base64: /9j/4AAQ...Kkdf/9k=
    ImageFormInputs:
      externalValue: 'http://example.com/examples/example.jpg'
      summary: An example image
    classificationOutputs:
      summary: Classification output of batched images
      value:
        kind: Collection
        contents:
          - kind: ClassificationOutput
            contents:
              - kind: CategoryPrediction
                category: golden retriever
                score: 0.898
              - kind: CategoryPrediction
                category: labrador retriever
                score: 0.032
          - kind: ClassificationOutput
            contents:
              - kind: CategoryPrediction
                category: golden retriever
                score: 0.898
              - kind: CategoryPrediction
                category: labrador retriever
                score: 0.032
        duration: 0.21
    detectionOutputs:
      summary: Detection output for batched images
      value:
        kind: Collection
        contents:
          - kind: DetectionOutput
            contents:
              - kind: BoundingBoxPrediction
                category: dog
                score: 0.9892
                box:
                  top: 104.94593
                  left: 321.44388
                  width: 211.48874
                  height: 389.8125
              - kind: BoundingBoxPrediction
                category: dog
                score: 0.09611
                box:
                  top: 201.81993
                  left: 128.52129
                  width: 197.32176
                  height: 229.21489
          - kind: DetectionOutput
            contents:
              - kind: BoundingBoxPrediction
                category: dog
                score: 0.9892
                box:
                  top: 104.94593
                  left: 321.44388
                  width: 211.48874
                  height: 389.8125
              - kind: BoundingBoxPrediction
                category: dog
                score: 0.09611
                box:
                  top: 201.81993
                  left: 128.52129
                  width: 197.32176
                  height: 229.21489
        duration: 0.21
    health:
      summary: Health status
      value:
        status: ok
        duration: 0.1
    postClient:
      summary: Body to create a client
      value:
        name: client_1
        description: This is a default client
    patchClient:
      summary: Body to update a client
      value:
        name: updated_client_1
        description: This is an updated client
    client:
      summary: A client
      value:
        self: 'https://api.instill.tech/clients/9bsv0s3fomng02ns04kg'
        kind: Client
        id: 9bsv0s3fomng02ns04kg
        name: client_1
        description: This is a default client
        created_at: '2021-09-22T13:01:54.130Z'
        updated_at: '2021-09-27T07:14:34.309Z'
        duration: 0.1
    postedClient:
      summary: A newly created client
      value:
        self: 'https://api.instill.tech/clients/9bsv0s3fomng02ns04kg'
        kind: Client
        id: 9bsv0s3fomng02ns04kg
        secret: c6ybaggewoe3mxbm9podco6vhc0lgm5slutbtuq9
        name: client_1
        description: This is a default client
        created_at: '2021-09-22T13:01:54.130Z'
        updated_at: '2021-09-22T13:01:54.130Z'
        duration: 0.1
    updatedClient:
      summary: An updated client
      value:
        self: 'https://api.instill.tech/clients/9bsv0s3fomng02ns04kg'
        kind: Client
        id: 9bsv0s3fomng02ns04kg
        name: updated_client_1
        description: This is an updated client
        created_at: '2021-09-22T13:01:54.130Z'
        updated_at: '2021-09-27T07:14:34.309Z'
        duration: 0.1
    rotatedClient:
      summary: A client whose secret is rotated
      value:
        self: 'https://api.instill.tech/clients/9bsv0s3fomng02ns04kg'
        kind: Client
        id: 9bsv0s3fomng02ns04kg
        secret: 39hmgn07twycasc7b2yqiy7glsymv4ji1jjlj7jd
        name: client_1
        description: This is a default client
        created_at: '2021-09-22T13:01:54.130Z'
        updated_at: '2021-09-27T07:15:12.208Z'
        duration: 0.1
    clients:
      summary: An array of clients
      value:
        self: 'https://api.instill.tech/clients'
        kind: Collection
        contents:
          - self: 'https://api.instill.tech/clients/9bsv0s3fomng02ns04kg'
            kind: Client
            id: 9bsv0s3fomng02ns04kg
            name: client_1
            description: This is a default client
            created_at: '2021-09-22T13:01:54.130Z'
            updated_at: '2021-09-27T07:14:34.309Z'
          - self: 'https://api.instill.tech/clients/9bsv0s0pmqu002phke60'
            kind: Client
            id: 9bsv0s0pmqu002phke60
            name: client_2
            description: This is another client
            created_at: '2021-09-12T08:01:55.101Z'
            updated_at: '2021-09-15T06:24:31.109Z'
        duration: 0.1
    OAuth2JWT:
      summary: Get a token to access Instill Management API
      value:
        kind: OAuth2JWT
        access_token: eyJhbGci...kU2gSqQw
        expires_in: 3600
        expiry: '2021-10-01T12:10:12.236Z'
        token_type: Bearer
        duration: 0.1
    requestToken:
      summary: Body to request a token for inference
    requestModelsToken:
      summary: Body to request a token to use specific models for inference
      value:
        contents:
          - model_id: 9bsv0s0pmqu002phke60
            task: detection
            version: 1
          - model_id: 9bsv0s11ads002smvkf0
            task: detection
            version: 2
    modelHealth:
      summary: The health status of Model API
      value:
        status: 200
        duration: 0.1
    ModelVersion:
      summary: The model version information
      value:
        duration: 0.05
        self: 'https://api.instill.tech/models/c64j82t9481afoqqqa10/versions/1'
        kind: ModelVersion
        version: 1
        description: First version model based on Resnet34 architect
        created_at: '2021-11-23T04:56:07.000+00:00'
        updated_at: '2021-11-23T04:56:07.000+00:00'
        status: online
        metadata: {}
    ListOfModelVersions:
      summary: The list of model versions
      value:
        duration: 0.05
        self: 'https://api.instill.tech/models/c64j82t9481afoqqqa10/versions'
        kind: Collection
        contents:
          - self: 'https://api.instill.tech/models/c64j82t9481afoqqqa10/versions/1'
            kind: ModelVersion
            version: 1
            status: offline
            description: First version model based on Resnet34 architect
            created_at: '2021-11-23T04:56:07.000+00:00'
            updated_at: '2021-11-23T04:56:07.000+00:00'
            metadata: {}
    Model:
      summary: The model information
      value:
        duration: 0.05
        self: 'https://api.instill.tech/models/c64j82t9481afoqqqa10'
        kind: Model
        name: Human detection
        id: c64j82t9481afoqqqa10
        optimized: false
        description: Human detection model using Resnet34
        type: tensorrt
        framework: pytorch
        created_at: '2021-11-23T04:56:07.000+00:00'
        updated_at: '2021-11-23T04:56:07.000+00:00'
        organization: instill.tech
        icon: 'gcs://icons/man.png'
        visibility: public
        versions:
          - self: 'https://api.instill.tech/models/c64j82t9481afoqqqa10/versions/1'
            kind: ModelVersion
            version: 1
            description: First version model based on Resnet34 architect
            created_at: '2021-11-23T04:56:07.000+00:00'
            updated_at: '2021-11-23T04:56:07.000+00:00'
            status: online
    PublicModels:
      summary: The list of public models
      value:
        duration: 0.05
        self: 'https://api.instill.tech/public/models'
        kind: Collection
        contents:
          - self: 'https://api.instill.tech/models/c64j82t9481afoqqqa10'
            kind: Model
            name: Human detection
            id: c64j82t9481afoqqqa10
            optimized: false
            description: Human detection model using Resnet34
            type: tensorrt
            framework: pytorch
            created_at: '2021-11-23T04:56:07.000+00:00'
            updated_at: '2021-11-23T04:56:07.000+00:00'
            organization: instill.tech
            icon: 'gcs://icons/man.png'
            visibility: public
            versions:
              - self: >-
                  https://api.instill.tech/models/c64j82t9481afoqqqa10/versions/1
                kind: ModelVersion
                version: 1
                description: First version model based on Resnet34 architect
                created_at: '2021-11-23T04:56:07.000+00:00'
                updated_at: '2021-11-23T04:56:07.000+00:00'
                status: online
    ListOfModels:
      summary: The list of models
      value:
        duration: 0.05
        self: 'https://api.instill.tech/models'
        kind: Collection
        contents:
          - self: 'https://api.instill.tech/models/c64j82t9481afoqqqa10'
            kind: Model
            name: Human detection
            id: c64j82t9481afoqqqa10
            optimized: false
            description: Human detection model using Resnet34
            type: tensorrt
            framework: pytorch
            created_at: '2021-11-23T04:56:07.000+00:00'
            updated_at: '2021-11-23T04:56:07.000+00:00'
            organization: instill.tech
            icon: 'gcs://icons/man.png'
            visibility: public
            versions:
              - self: >-
                  https://api.instill.tech/models/c64j82t9481afoqqqa10/versions/1
                kind: ModelVersion
                version: 1
                description: First version model based on Resnet34 architect
                created_at: '2021-11-23T04:56:07.000+00:00'
                updated_at: '2021-11-23T04:56:07.000+00:00'
                status: online
    pipelineHealth:
      summary: The health status of Pipelines API
      value:
        status: ok
        duration: 0.1
    CreatePipelineReq:
      summary: Create a pipeline
      value:
        name: Pipeline-1
        description: Don't you think of this pipeline really awesome?
        active: true
        recipe:
          data_source:
            type: http
          visual_data_operator:
            - model_id: c64j7td9481af4asqb9g
              version: 1
          data_destination:
            type: http
    UpdatePipelineReq:
      summary: Update a pipeline
      value:
        name: Pipeline-1
        description: Don't you think of this pipeline really awesome?
        active: true
        recipe:
          data_source:
            type: http
          visual_data_operator:
            - model_id: c64j7td9481af4asqb9g
              version: 1
          data_destination:
            type: http
    PipelinesResp:
      summary: A list of Instill Pipelines
      value:
        duration: 0.01
        kind: Collection
        self: 'https://api.instill.tech/pipelines'
        total: 2
        contents:
          - kind: Pipeline
            self: 'https://api.instill.tech/pipelines/c66ju0sbcv41b43kneu0'
            id: c66ju0sbcv41b43kneu0
            name: Pipeline-1
            description: Don't you think of this pipeline awesome?
            created_at: '2021-09-22T13:01:54.130Z'
            updated_at: '2021-09-27T07:14:34.309Z'
            active: false
          - kind: Pipeline
            self: 'https://api.instill.tech/pipelines/c66juv4bcv41coq7q8ng'
            id: c66juv4bcv41coq7q8ng
            name: Pipeline-2
            description: Don't you think of this pipeline really awesome?
            created_at: '2021-09-26T07:15:57.029Z'
            updated_at: '2021-09-27T08:14:34.309Z'
            active: true
    PipelineWithRecipeResp:
      summary: An Instill Pipeline
      value:
        duration: 0.01
        kind: Pipeline
        self: 'https://api.instill.tech/pipelines/c66ju0sbcv41b43kneu0'
        id: c66ju0sbcv41b43kneu0
        name: Pipeline-1
        description: Don't you think of this pipeline really awesome?
        created_at: '2021-09-22T10:06:12.186Z'
        updated_at: '2021-09-27T07:14:34.309Z'
        recipe:
          data_source:
            type: http
          visual_data_operator:
            - model_id: c64j7td9481af4asqb9g
              version: 1
          data_destination:
            type: http
        active: true
    ImageJsonInputsUrl:
      summary: >-
        A list of images url to process. Maximum 32 images per request. Each
        image must be less than 4MB.
      value:
        contents:
          - url: 'https://artifacts.instill.tech/dog.jpg'
    ImageJsonInputsImage:
      summary: >-
        A list of images to process. Maximum 32 images per request. Each image
        must be less than 4MB.
      value:
        contents:
          - base64: /9j/4AAQ...Kkdf/9k=
    pipelineImageFormInputs:
      summary: >-
        A list of images to process. Maximum 32 images per request. Each image
        must be less than 4MB.
      value: |
        --------------------------9e2a4e9d1debd712
        Content-Disposition: form-data; name="contents"; filename="img1.jpg"
        Content-Type: image/jpeg

        <binary data>
        --------------------------9e2a4e9d1debd712
        Content-Disposition: form-data; name="contents"; filename="img2.png"
        Content-Type: image/png

        <binary data>
        --------------------------9e2a4e9d1debd712
        ...
    DetectionOutputs:
      summary: Detection output for batched images
      value:
        kind: Collection
        contents:
          - kind: DetectionOutput
            contents:
              - kind: BoundingBoxPrediction
                category: dog
                score: 0.9892
                box:
                  top: 104.94593
                  left: 321.44388
                  width: 211.48874
                  height: 389.8125
              - kind: BoundingBoxPrediction
                category: dog
                score: 0.0.9611
                box:
                  top: 201.81993
                  left: 128.52129
                  width: 197.32176
                  height: 229.21489
          - kind: DetectionOutput
            contents:
              - kind: BoundingBoxPrediction
                category: dog
                score: 0.9892
                box:
                  top: 104.94593
                  left: 321.44388
                  width: 211.48874
                  height: 389.8125
              - kind: BoundingBoxPrediction
                category: dog
                score: 0.0.9611
                box:
                  top: 201.81993
                  left: 128.52129
                  width: 197.32176
                  height: 229.21489
        duration: 0.21
  requestBodies:
    ImageInputs:
      content:
        application/json:
          examples:
            ImageJsonInputs:
              $ref: '#/components/examples/ImageJsonInputs'
          schema:
            $ref: '#/components/schemas/ImageJsonInputs'
        multipart/form-data:
          examples:
            ImageFormInputs:
              $ref: '#/components/examples/ImageFormInputs'
          schema:
            $ref: '#/components/schemas/ImageFormDataInputs'
    PostClient:
      content:
        application/json:
          examples:
            postClient:
              $ref: '#/components/examples/postClient'
          schema:
            $ref: '#/components/schemas/PostClient'
      description: Body to create a client
      required: true
    PatchClient:
      content:
        application/json:
          examples:
            patchClient:
              $ref: '#/components/examples/patchClient'
          schema:
            $ref: '#/components/schemas/PatchClient'
      description: Body to update a client
      required: true
    RequestToken:
      content:
        application/json:
          examples:
            requestToken:
              $ref: '#/components/examples/requestToken'
            requestModelsToken:
              $ref: '#/components/examples/requestModelsToken'
          schema:
            $ref: '#/components/schemas/RequestModelsToken'
      description: Body to request a token for inference
      required: false
    CreatePipeline:
      content:
        application/json:
          examples:
            CreatePipeline:
              $ref: '#/components/examples/CreatePipelineReq'
          schema:
            $ref: '#/components/schemas/CreatePipelineReq'
      description: Entity for creating pipeline
      required: true
    UpdatePipeline:
      content:
        application/json:
          examples:
            UpdatePipeline:
              $ref: '#/components/examples/UpdatePipelineReq'
          schema:
            $ref: '#/components/schemas/UpdatePipelineReq'
      description: Pipeline object that will be updated
      required: true
    ImageJsonInputs:
      content:
        application/json:
          examples:
            ImageJsonInputsUrl:
              $ref: '#/components/examples/ImageJsonInputsUrl'
            ImageJsonInputsImage:
              $ref: '#/components/examples/ImageJsonInputsImage'
          schema:
            $ref: '#/components/schemas/ImageJsonInputs'
        multipart/form-data:
          examples:
            ImageFormInputs:
              $ref: '#/components/examples/pipelineImageFormInputs'
          schema:
            $ref: '#/components/schemas/ImageFormDataInputs'
  parameters:
    limit:
      description: 'How many items to return at one time (max: 100)'
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 100
        format: int64
        maximum: 100
        minimum: 1
        type: integer
      style: form
    offset:
      description: The zero-ary offset index into the results
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        format: int64
        minimum: 0
        type: integer
      style: form
    visibility:
      description: >-
        Model visibility. If visibility is public, the api will query all public
        models which is yours or in your organization. If it is private, the api
        will query private models which is yours or in your organization.
      explode: true
      in: query
      name: visibility
      required: false
      schema:
        example: public
        type: string
      style: form
    id:
      description: model unique id
      explode: false
      in: path
      name: id
      required: true
      schema:
        example: c64j82t9481afoqqqa10
        type: string
      style: simple
    version:
      description: model version
      explode: false
      in: path
      name: version
      required: true
      schema:
        default: 1
        type: integer
      style: simple
    q:
      description: Search query term (TBD)
      explode: true
      in: query
      name: q
      required: false
      schema:
        default: 'null'
        type: string
      style: form
    modellimit:
      description: How many models to return at one time (max 100)
      explode: true
      in: query
      name: limit
      required: false
      schema:
        default: 10
        format: int32
        type: integer
      style: form
    modeloffset:
      description: The zero-based offset index into the results
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        format: int32
        type: integer
      style: form
    pipelinelimit:
      description: How many items to return at one time (max 100)
      explode: true
      in: query
      name: limit
      required: false
      schema:
        format: int32
        type: integer
      style: form
    pipelineoffset:
      description: The zero-ary offset index into the results
      explode: true
      in: query
      name: offset
      required: false
      schema:
        default: 0
        format: int32
        type: integer
      style: form
    sort:
      description: Sorting order
      explode: true
      in: query
      name: sort
      required: false
      schema:
        example: +name
        type: string
      style: form
    pipelineq:
      description: Search query term (TBD)
      explode: true
      in: query
      name: q
      required: false
      schema:
        type: string
      style: form
    with_recipe:
      description: >-
        Return recipe in the response of listing pipeline, false if this
        parameter is unassigned
      explode: true
      in: query
      name: with_recipe
      required: false
      schema:
        type: boolean
      style: form
    pipelineId:
      description: The unique id of Instill Pipeline
      explode: false
      in: path
      name: id
      required: true
      schema:
        description: the id of this entity
        example: c5lt874bcv45n036o8qg
        maxLength: 20
        minLength: 20
        type: string
      style: simple
x-tagGroups:
  - name: API Authorization
    tags:
      - Token
  - name: API calls
    tags:
      - Health
      - Client
      - Model
      - Pipeline
      - Classification
      - Detection
      - Inference
