name: Integration Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-push-image:
    if: github.ref == 'refs/heads/main'
    name: Build and push image
    uses: instill-ai/api-gateway/.github/workflows/images.yml@main
    secrets: inherit

  backend:
    needs: build-push-image
    if: github.ref == 'refs/heads/main'
    name: Backends
    strategy:
      fail-fast: false
      matrix:
        component:
          [mgmt-backend, pipeline-backend, model-backend, artifact-backend]
    uses: instill-ai/instill-core/.github/workflows/integration-test-backend.yml@main
    with:
      component: ${{ matrix.component }}
      target: latest

  pr-head:
    if: github.event_name == 'pull_request'
    name: PR head branch
    strategy:
      fail-fast: false
      matrix:
        component:
          [mgmt-backend, pipeline-backend, model-backend, artifact-backend]
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          overprovision-lvm: "true"
          remove-dotnet: "true"
          build-mount-path: "/var/lib/docker/"

      - name: Restart docker
        run: sudo service docker restart

      # mono occupies port 8084 which conflicts with mgmt-backend
      - name: Stop mono service
        run: |
          sudo lsof -t -i:8084 | xargs -r sudo kill -9
          sudo lsof -i -P -n | grep LISTEN

      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          load: true
          build-args: |
            GOLANG_VERSION=${{ env.GOLANG_VERSION }}
            ALPINE_VERSION=${{ env.ALPINE_VERSION }}
            KRAKEND_CE_VERSION=${{ env.KRAKEND_CE_VERSION }}
            SERVICE_NAME=api-gateway
          tags: instill/api-gateway:latest

      - name: Checkout repo (instill-core)
        uses: actions/checkout@v4
        with:
          repository: instill-ai/instill-core

      - name: Load .env file (instill-core)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill Core (latest)
        # CFG_COMPONENT_SECRETS_GITHUB* variables are injected to test OAuth
        # connection creation on `pipeline-backend`.
        run: |
          make latest EDITION=local-ce:test ENV_SECRETS_COMPONENT=.env.secrets.component.test

      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GOLANG_VERSION }}

      - name: Install k6
        run: |
          go install go.k6.io/xk6/cmd/xk6@v${{ env.XK6_VERSION }}
          xk6 build v${{ env.K6_VERSION }} \
            --with github.com/grafana/xk6-sql@v${{ env.XK6_SQL_VERSION }} \
            --with github.com/grafana/xk6-sql-driver-postgres@v${{ env.XK6_SQL_POSTGRES_VERSION }} && sudo cp k6 /usr/bin

      - name: Run ${{ matrix.component }} integration test (latest)
        run: |
          git clone https://github.com/instill-ai/${{ matrix.component }}.git
          cd ${{ matrix.component }}
          make integration-test API_GATEWAY_URL=localhost:${API_GATEWAY_PORT}

      - name: Make down Instill Core
        run: |
          make down
