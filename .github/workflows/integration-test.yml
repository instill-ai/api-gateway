name: Integration Test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-push-image:
    if: github.ref == 'refs/heads/main'
    name: Build and push image
    uses: instill-ai/api-gateway/.github/workflows/images.yml@main
    secrets: inherit
  core:
    needs: build-push-image
    if: github.ref == 'refs/heads/main'
    name: Core Backends
    strategy:
      fail-fast: false
      matrix:
        component: [mgmt-backend]
    uses: instill-ai/core/.github/workflows/integration-test-backend.yml@main
    with:
      component: ${{ matrix.component }}
      target: latest
  vdp:
    needs: build-push-image
    if: github.ref == 'refs/heads/main'
    name: VDP Backends
    strategy:
      fail-fast: false
      matrix:
        component: [pipeline-backend]
    uses: instill-ai/vdp/.github/workflows/integration-test-backend.yml@main
    with:
      component: ${{ matrix.component }}
      target: latest
  model:
    needs: build-push-image
    if: github.ref == 'refs/heads/main'
    name: Model Backends
    strategy:
      fail-fast: false
      matrix:
        component: [model-backend]
    uses: instill-ai/model/.github/workflows/integration-test-backend.yml@main
    with:
      component: ${{ matrix.component }}
      target: latest

  pr-head:
    if: github.event_name == 'pull_request'
    name: PR head branch
    runs-on: ubuntu-latest
    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.0

      # mono occupies port 8084 which conflicts with mgmt-backend
      - name: Stop mono service
        run: |
          sudo kill -9 `sudo lsof -t -i:8084`
          sudo lsof -i -P -n | grep LISTEN

      - name: Maximize build space
        uses: easimon/maximize-build-space@master
        with:
          overprovision-lvm: "true"
          remove-dotnet: "true"
          build-mount-path: "/var/lib/docker/"

      - name: Restart docker
        run: sudo service docker restart

      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          repository: instill-ai/instill-core

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Install k6
        run: |
          curl https://github.com/grafana/k6/releases/download/v${{ env.K6_VERSION }}/k6-v${{ env.K6_VERSION }}-linux-amd64.tar.gz -L | tar xvz --strip-components 1 && sudo cp k6 /usr/bin

      - name: Launch Instill Core (latest)
        run: |
          make latest BUILD=true EDITION=local-ce:test ITMODE_ENABLED=true

      - name: Checkout (pipeline)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/pipeline-backend

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Run integration-test (pipeline)
        run: |
          make integration-test API_GATEWAY_URL=localhost:8080

      - name: Checkout (model)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/model-backend

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Run integration-test (model)
        run: |
          make integration-test API_GATEWAY_URL=localhost:8080

      - name: Checkout (mgmt)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/mgmt-backend

      - name: Load .env file
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Run integration-test (mgmt)
        run: |
          make integration-test API_GATEWAY_URL=localhost:8080
